@import url('https://fonts.googleapis.com/css2?family=Input+Mono:wght@400&display=swap');

body {
    font-family: 'Input Mono', monospace;
    font-weight: 400;
    font-style: normal;
    background-color: #1a1a1a;
    overflow: hidden;
    margin: 0;
    padding: 0;
    height: 100vh;
    color: #321717;
    perspective: 1000px;
}

/* Bookshelf styles */
.bookshelf {
  display: flex;
  flex-direction: column;
  gap: 85px;
  transform-style: preserve-3d;
  position: relative;
  width: 100%;
  height: 100vh;
  align-items: center;
  padding: 10vh 0 90px;
  margin-left: 15px;
  overflow: hidden;
  transition: gap 0.5s cubic-bezier(0.4,0,0.2,1);
}

.bookshelf.filtered {
  gap: 7vh;
}

.shelf-container {
  position: relative;
  height: 20px; 
  margin: 14px auto; 
  width: 700px; 
  transform-style: preserve-3d;
  transform-origin: center center;
  transition: transform 0.5s ease, width 0.5s ease, x 0.8s ease;
  will-change: transform, width, x;
}

.shelf-wrapper {
  position: absolute;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transform-origin: center center;
}

.shelf {
  height: 11px;
  margin: 14px auto; 
  border-radius: 10px; 
  background: linear-gradient(180deg, #fff 70%, #bbb 30%);
  box-shadow: 0 5px 16px 2px rgba(185, 185, 185, 0.536), 0 2px 6px 0 #000b, 0 1px 0 0 #fff8 inset; /* Reduced shadow */
  transform: translateX(-5px);
  transition: width 3.5s ease, transform 3.5s ease;
}

.shelf-items {  
  position: absolute;  
  width: 95%;  
  top: -75px; 
  display: flex;  
  justify-content: center;  /* Changed from flex-start to center for better centering */
  align-items: flex-start;  
  gap: 10px;
  transform-style: preserve-3d;  
  transform: rotateX(25deg);  
  overflow-x: visible;  
  padding: 0 10px; /* Reduced padding for more space */
}

.shelf-items::-webkit-scrollbar {
  display: none;
}

#splitButton {
  padding: 10px 15px;
  background: #333;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-family: 'Input Mono', monospace;
  margin-top: 20px;
  z-index: 10;
}

#splitButton:hover {
  background: #444;
}

/* Original parallelepiped styles - exactly as they were before */
.parallelepiped {
  position: relative;
  width: 47px; /* Reduced from 70px (1/3 smaller) */
  height: 73px; /* Reduced from 110px (1/3 smaller) */
  transform-style: preserve-3d;
  transform: rotateX(-40deg) rotateY(0deg);
  transition: transform 0.5s ease-out;
  flex-shrink: 0;
  margin: 10px 10px 0; /* Reduced from 15px to fit smaller items */
  cursor: pointer;
  will-change: transform;
}

/* Y rotation for all elements when NOT filtered */
.bookshelf:not(.filtered) .parallelepiped {
  animation: rotateY var(--rotate-duration, 4s) ease-in-out infinite;
  animation-delay: var(--rotate-delay, 0s);
}

/* Y rotation only for highest earning group when filtered */
.bookshelf.filtered .parallelepiped.group-0 {
  animation: rotateY var(--rotate-duration, 4s) ease-in-out infinite;
  animation-delay: var(--rotate-delay, 0s);
}

/* Disable Y rotation animation for grayscale groups when filtered */
.bookshelf.filtered .parallelepiped.group-grayscale {
  animation: none !important;
}

@keyframes float {
    0% { 
        transform: rotateX(-40deg) rotateY(0deg) translateY(0px) rotateZ(var(--rotate-start, 0deg)); 
    }
    100% { 
        transform: rotateX(-40deg) rotateY(0deg) translateY(var(--translate-end, -2px)) rotateZ(var(--rotate-z-end, 0deg)); 
    }
}

@keyframes rotateY {
    0% { 
        transform: rotateX(-40deg) rotateY(-40deg); 
    }
    50% { 
        transform: rotateX(-40deg) rotateY(40deg); 
    }
    100% { 
        transform: rotateX(-40deg) rotateY(-40deg); 
    }
}

/* Infinite floating animation for highest earning group */
.parallelepiped.group-float {
    animation: float var(--float-duration, 2s) ease-in-out infinite alternate, rotateY var(--rotate-duration, 4s) ease-in-out infinite;
    animation-delay: var(--float-delay, 0s), var(--rotate-delay, 0s);
}

.texture-wrapper {
    position: absolute;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    pointer-events: none;
    z-index: 0;
}

.texture-side {
    position: absolute;
    background-size: cover;
    background-position: center;
    opacity: 0.6;
    animation: textureGlow 6s infinite alternate;
    filter: grayscale(0%);
    transition: filter 0.5s ease-out;
    image-rendering: -webkit-optimize-contrast;
    image-rendering: crisp-edges;
}

.texture-front {
    width: 100%;
    height: 100%;
    transform: translateZ(8px); /* Reduced from 15px */
    background-position: center 30%;
}

.texture-back {
    width: 100%;
    height: 100%;
    transform: translateZ(-8px) rotateY(180deg); /* Reduced from 15px */
    background-position: center 70%;
}

.texture-right {
    width: 16px; /* Reduced from 30px (depth * 2 = 8 * 2) */
    height: 100%;
    right: -8px; /* Reduced from 15px */
    transform: rotateY(90deg);
    background-position: right 50%;
}

.texture-left {
    width: 16px; /* Reduced from 30px (depth * 2 = 8 * 2) */
    height: 100%;
    left: -8px; /* Reduced from 15px */
    transform: rotateY(-90deg);
    background-position: left 50%;
}

.texture-top {
    width: 100%;
    height: 16px; /* depth * 2 = 8 * 2 */
    top: -8px;
    transform: rotateX(90deg);
    background-position: center top;
}

.texture-bottom {
    width: 100%;
    height: 16px; /* depth * 2 = 8 * 2 */
    bottom: -8px;
    transform: rotateX(-90deg);
    background-position: center bottom;
}




/* Animation classes for filtered elements - removing visual differences */
.parallelepiped.matching {
  z-index: 5;
  opacity: 1;
  transform-style: preserve-3d !important;
  transition: transform 0.5s ease-out, opacity 0.5s ease-out;
}

.parallelepiped.non-matching {
  z-index: 1;
  opacity: 1; /* Set to full opacity to match */
  transform-style: preserve-3d !important;
  transition: transform 0.5s ease-out, opacity 0.5s ease-out;
}



/* When filtered and hovered */
.parallelepiped.matching:hover,
.parallelepiped.non-matching:hover {
    animation: none;
    transform: scale(1.1) translateY(-5px);
}

/* Loading and Error styles */
.loading-indicator {
    padding: 20px;
    color: white;
    font-size: 1.2rem;
    text-align: center;
    animation: pulse 1.5s infinite alternate;
}

.error-message {
    padding: 20px;
    color: #ff5555;
    font-size: 1.2rem;
    text-align: center;
    background-color: rgba(50, 0, 0, 0.3);
    border: 1px solid rgba(255, 0, 0, 0.3);
    border-radius: 8px;
}



.edge {
    position: absolute;
    background: rgba(255, 255, 255, 0.16);
    z-index: 4;
}

@keyframes pulse {
    0% { opacity: 0.6; }
    100% { opacity: 1; }
}

/* White glow only for highest earning group */
.parallelepiped.group-0 .edge {
    box-shadow: 0 0 8px rgb(255, 255, 255);
    animation: pulse 1s infinite alternate;
}

.edge-front-top { 
    top: 0; left: 0; 
    height: 2px; width: 47px; /* Adjusted to match new width */
}

.edge-front-bottom { 
    bottom: 0; left: 0; 
    height: 2px; width: 47px; /* Adjusted to match new width */
    transform: translateZ(8px);
}

.edge-front-left { 
    top: 0; left: 0; 
    width: 2px; height: 73px; /* Adjusted to match new height */
    transform: translateZ(8px);
}

.edge-front-right { 
    top: 0; right: 0; 
    width: 2px; height: 73px; /* Adjusted to match new height */
    transform: translateZ(8px);
}

.edge-back-top { 
    top: 0; left: 0; 
    height: 2px; width: 47px; /* Adjusted to match new width */
    transform: translateZ(-8px);
}

.edge-back-bottom { 
    bottom: 0; left: 0; 
    height: 2px; width: 47px; /* Adjusted to match new width */
    transform: translateZ(-8px);
}

.edge-back-left { 
    top: 0; left: 0; 
    width: 2px; height: 73px; /* Adjusted to match new height */
    transform: translateZ(-8px);
}

.edge-back-right { 
    top: 0; right: 0; 
    width: 2px; height: 73px; /* Adjusted to match new height */
    transform: translateZ(-8px);
}

/* Animation classes for filtered elements - removing visual differences */
.parallelepiped.matching .texture-side {  filter: grayscale(0%);}
.parallelepiped.non-matching .texture-side {  filter: grayscale(100%);}




/* Fallback style for any group beyond defined range */
.parallelepiped[class*="group-"] .texture-side {     filter: grayscale(0%) hue-rotate(0deg); }

/* Grayscale group for non-highest earning groups */
.parallelepiped.group-grayscale .texture-side {     filter: grayscale(100%); }



/* Intro Screen Styles */
.intro-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: #1a1a1a;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.intro-screen.fade-out {
    opacity: 0;
    transform: translateY(-20px);
}

.intro-text {
    font-family: 'Input Mono', monospace;
    font-weight: 700;
    color: #a8a8a8;
    font-size: clamp(2rem, 8vw, 6rem);
    text-align: center;
    max-width: 90vw;
    line-height: 1.2;
    cursor: pointer;
    transition: color 0.3s ease;
    user-select: none;
}

.intro-text:hover {
    color: #ffffff;
}

.intro-text::after {
    content: '|';
    animation: blink 1s infinite;
    margin-left: 2px;
}

.intro-text.typing-complete::after {
    display: none;
}

@keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
}

/* Winner animation styles */
.winner-parallelepiped {
    position: fixed !important;
    top: 50% !important;
    left: 50% !important;
    margin-left: -84px !important; /* Adjusted for 4x width (47 * 4 / 2) */
    margin-top: -150px !important; /* Adjusted for 4x height (73 * 4 / 2) */
    z-index: 1000 !important;
    animation: winnerRotateY 8s ease-in-out infinite !important;
    will-change: transform !important;
    transform-origin: center center !important;
    perspective: 2000px !important;
    image-rendering: pixelated !important;
}

.winner-parallelepiped .texture-side {
    will-change: transform !important;
    transform-origin: center center !important;
    image-rendering: pixelated !important;
    -webkit-font-smoothing: antialiased !important;
    -moz-osx-font-smoothing: grayscale !important;
    background-size: 100% 100% !important;
    image-rendering: -webkit-optimize-contrast !important;
    image-rendering: crisp-edges !important;
    opacity: 1 !important;
}

@keyframes winnerRotateY {
    0% { transform: scale(1) translateZ(100px) rotateX(0deg) rotateY(-40deg); }
    50% { transform: scale(1) translateZ(100px) rotateX(360deg) rotateY(-180deg); }
    100% { transform: scale(1) translateZ(100px) rotateX(0deg) rotateY(-40deg); }
}

.main-app {
    width: 100%;
    height: 100vh;
    overflow: hidden;
}